
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
      &kp ESC     &kp N1         &kp N2  &kp N3  &kp N4  &kp N5                    &none                                                                                 &none  &kp N6    &kp N7     &kp N8   &kp N9     &kp N0  &kp MINUS
      &kp TAB      &kp Q          &kp W   &kp E   &kp R   &kp T                    &none                                                                                 &none   &kp Y     &kp U      &kp I    &kp O      &kp P  &kp EQUAL
 &kp CAPSLOCK      &kp A          &kp S   &kp D   &kp F   &kp G                    &none       &lt 3 DELETE  &kp LALT                       &kp LGUI  &kp RIGHT_ALT      &none   &kp H     &kp J      &kp K    &kp L   &kp SEMI    &kp SQT
    &kp LSHFT      &kp Z          &kp X   &kp C   &kp V   &kp B                                              &kp HOME                  &kp RC(RS(Z))                             &kp N     &kp M  &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
        &none  &kp GRAVE  &kp BACKSLASH   &none   &none                    &kp BACKSPACE  &kp RIGHT_CONTROL   &kp END                      &kp RC(Z)    &lt 3 ENTER  &kp SPACE          &kp LEFT   &kp DOWN   &kp UP  &kp RIGHT   &kp PIPE
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                 &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                                 &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL      &none   &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B                                 &kp HOME                  &kp PG_UP                         &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3                &kp F4                 &kp F5  &kp F6             &none                                                  &bootloader  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans         &kp LESS_THAN       &kp GREATER_THAN  &trans             &none                                                        &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans             &none  &trans  &trans                  &trans  &trans        &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans        &kp LEFT_BRACE        &kp RIGHT_BRACE  &trans                            &trans                  &trans                       &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans      &kp LEFT_BRACKET      &kp RIGHT_BRACKET                    &trans  &trans  &trans                  &trans  &trans       &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_navigation {
            bindings = <
 &kp F1             &kp F2            &kp F3                 &kp F4           &kp F5  &kp F6                  &none                                                                               &trans  &kp F7        &kp F8         &kp F9      &kp F10        &kp F11  &kp F12
  &none              &none             &none                  &none            &none   &none            &bootloader                                                                          &bootloader   &none      &kp LEFT   &kp RC(DOWN)   &kp RC(UP)      &kp RIGHT    &none
  &none   &kp LEFT_BRACKET     &kp LESS_THAN   &kp LEFT_PARENTHESIS   &kp LEFT_BRACE   &none                  &none  &trans  &trans                  &bt BT_CLR  &rgb_ug RGB_TOG  &rgb_ug RGB_MEFS_CMD 5   &none  &kp RC(LEFT)       &kp DOWN       &kp UP  &kp RC(RIGHT)    &none
  &none  &kp RIGHT_BRACKET  &kp GREATER_THAN  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE   &none                                 &trans                      &trans                                            &none      &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP        &kp END    &none
  &none              &none             &none                  &none            &none                         &trans  &trans  &trans                      &trans       &bl BL_TOG                  &trans            &bl BL_INC     &bl BL_DEC        &none          &none    &none
            >;
        };

    };
};
